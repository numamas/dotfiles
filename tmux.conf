set -g mouse on
set -g escape-time 0
set -g renumber-windows on
set -g status-fg white
set -g status-bg "colour238"
setw -g window-status-current-format "#[fg=colour255,bg=colour27] #I: #W #[default]"

# truecolor support
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",$TERM:Tc"

# handle Home and End with default-terminal = xterm-256color
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# enable Ctrl-Arrow in vim on tmux
setw -g xterm-keys on

# vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ (view|vim|nvim|emacs|emacsclient)(diff)?$'"

# keymap
unbind C-b
set -g prefix M-q

bind -n M-u source-file ~/.tmux.conf \; display-message 'config updated'
bind -n M-p setw synchronize-panes \; display-message 'synchronize-pane #{?pane_synchronized,on,off}'
bind -n M-\\ confirm-before -p 'kill-pane #P? (y/N)' kill-pane

# bind -n M-n new-window -c "#{pane_current_path}"
bind -n M-n run-shell 'tmux new-window "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec $SHELL"'
bind -n M-^ run-shell 'tmux split-window -h "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec $SHELL"'
bind -n M-- run-shell 'tmux split-window -v "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec $SHELL"'
bind -n M-+ new-window\; split-window -h\; split-window -v\; select-pane -L\; split-window -v\; select-pane -U

bind -n M-, previous-window
bind -n M-. next-window

bind -n M-h if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

bind -n M-H resize-pane -L
bind -n M-J resize-pane -D
bind -n M-K resize-pane -U
bind -n M-L resize-pane -R
bind -n M-f resize-pane -Z

bind -n M-v run "xsel -bo | tmux load-buffer - && tmux paste-buffer"

# copy-mode
bind -n M-c copy-mode
setw -g mode-keys vi
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -bi"
